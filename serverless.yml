service: sls-express16
# app and org for use with dashboard.serverless.com
frameworkVersion: "2"
custom:
  dynamodb:
    stages:
      - dev  
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: false

plugins: 
 - serverless-offline
 - serverless-dynamodb-local

provider:
  name: aws
  runtime: nodejs14.x
  region: ap-northeast-1
  stage: dev  
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:ap-northeast-1:*:*"  
  lambdaHashingVersion: 20201221


functions:
  hello:
    handler: app.handler
    events:
      - http:
          path: /
          method: ANY 
          cors: true
      - http:
          path: /test
          method: ANY 
          cors: true
      - http:
          path: /test2
          method: ANY 
          cors: true
      - http:
          path: /test3
          method: POST 
          cors: true
      - http:
          path: /test4
          method: ANY 
          cors: true
      # todos
      - http:
          path: /todos/index
          method: ANY 
          cors: true
      - http:
          path: /todos/show
          method: ANY 
          cors: true
      - http:
          path: /todos/add
          method: ANY 
          cors: true
      - http:
          path: /todos/update
          method: ANY 
          cors: true
      - http:
          path: /todos/delete
          method: ANY 
          cors: true
      #books
      - http:
          path: /books/index
          method: ANY 
          cors: true
      - http:
          path: /books/add
          method: ANY 
          cors: true
      - http:
          path: /books/search
          method: ANY 
          cors: true
      - http:
          path: /books/sort
          method: ANY 
          cors: true

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: 'todos'
    #books
    BooksDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
#          - AttributeName: createdAt
#            AttributeType: N            
        KeySchema:
          - AttributeName: id
            KeyType: HASH
#          - AttributeName: createdAt
#            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: 'books'
